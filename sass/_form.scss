@use 'sass:map';
@use 'sass:list';
@import './functions';

$colors: cget($theme-map, 'colors');

fieldset {
    padding: 0.5rem 2rem;
}

legend {
    text-transform: uppercase;
    font-size: 0.8em;
    letter-spacing: 0.1rem;
}

input:not([type='checkbox']):not([type='radio']):not([type='submit']):not([type='color']):not([type='button']):not([type='reset']),
select,
textarea,
textarea[type='text'] {
    font-family: inherit;
    padding: 0.8rem 1rem;
    border-radius: 4px;
    border: 1px solid cget($colors, 'light');
    font-size: 1em;
    transition: all 0.2s ease;
    display: block;
    width: 100%;

    &:hover {
        border-color: cget($colors, 'grey');
    }

    &:focus {
        outline: none;
        border-color: cget($colors, 'primary');
        box-shadow: 0 0 1px cget($colors, 'primary');
    }
}

input:not([type='checkbox']):not([type='radio']):not([type='submit']):not([type='color']):not([type='button']):not([type='reset']),
textarea {
    &.error {
        border-color: cget($colors, 'error');
    }

    &.success {
        border-color: cget($colors, 'success');
    }
}

select {
    -webkit-appearance: none;
    background: #f3f3f6 no-repeat 100%;
    background-size: 1ex;
    background-origin: content-box;
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='60' height='40' fill='%23555'><polygon points='0,0 60,0 30,40'/></svg>");
}

[type='checkbox'],
[type='radio'] {
    width: 1.6rem;
    height: 1.6rem;
}

/* BUTTONS */
$buttons: cget($theme-map, 'buttons');
$fonts: cget($theme-map, 'font');

#{$buttons} {
    padding: 1rem 2.5rem;
    color: cget($colors, 'dark');
    background: cget($colors, 'light');
    border-radius: 4px;
    border: 1px solid transparent;
    font-size: cget($fonts, 'size');
    line-height: 1;
    text-align: center;
    transition: opacity 0.2s ease;
    text-decoration: none;
    transform: scale(1);
    display: inline-block;
    cursor: pointer;
}

.grouped {
    display: flex;

    > *:not(:last-child) {
        margin-right: 16px;
    }

    &.gapless {
        > * {
            margin: 0 0 0 -1px !important;
            border-radius: 0 !important;
        }

        > *:first-child {
            margin: 0 !important;
            border-radius: 4px 0 0 4px !important;
        }

        > *:last-child {
            border-radius: 0 4px 4px 0 !important;
        }
    }

    + .button {
        margin-left: 1rem;
    }
}

#{$buttons} {
    opacity: 0.8;

    &:active {
        transform: scale(0.98);
    }
}

input:disabled,
button:disabled,
input:disabled:hover,
button:disabled:hover {
    opacity: 0.4;
    cursor: not-allowed;
}

$color_keys: map.keys($colors);
$color_classes: prefix($color_keys, '.');
$button_class: fillS('.button', list.length($color_keys));
$buttons_colored: joinS($button_class, $color_classes);

#{$buttons_colored},
[type='submit'] {
    color: #fff;
    z-index: 1; /* highlight from other button's border when grouped */
    background-color: #000;
    background-color: cget($colors, 'primary');
}

.button {
    @each $color in $color_keys {
        &.#{$color} {
            background-color: #{$color};
        }

        &.outline.#{$color} {
            background-color: transparent;
            border-color: #{$color};
        }
    }

    &.outline {
        background-color: transparent;
        border-color: cget($colors, 'light');
    }

    &.clear {
        background-color: transparent;
        border-color: transparent;
        color: cget($colors, 'primary');
    }

    &.icon {
        display: inline-flex;
        align-items: center;

        > img {
            margin-left: 2px;
        }
    }

    &.icon-only {
        padding: 1rem;
    }
}

::placeholder {
    color: #bdbfc4;
}
